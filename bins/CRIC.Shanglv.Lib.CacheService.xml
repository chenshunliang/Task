<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CRIC.Shanglv.Lib.CacheService</name>
    </assembly>
    <members>
        <member name="T:CRIC.Shanglv.Lib.CacheService.Memcached">
            <summary>
            Memcached缓存操作类
            </summary>
        </member>
        <member name="T:CRIC.Shanglv.Lib.CacheService.CacheBase">
            <summary>
            Cache基类，配置数据和基础方法
            </summary>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.CacheBase.GetConnectionString(System.String)">
            <summary>
            配置数据
            </summary>
            <param name="connKey"></param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.CacheBase.GetSettings(System.String)">
            <summary>
            获取配置
            </summary>
            <param name="cacheConnKey"></param>
        </member>
        <member name="T:CRIC.Shanglv.Lib.CacheService.ICache">
            <summary>
            缓存服务操作接口
            
                demo:
                var _cache = CacheFactory.CreateCache("Cache.Test");
                _cache.Set("key1", "aa44a", 1);
                var result3 = _cache.Get("key1");
            
            </summary>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Set(System.String,System.Object,CRIC.Shanglv.Lib.CacheService.CoverType)">
            <summary>
            设置缓存数据
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="coverType">覆盖类型</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Set(System.String,System.Object,System.Int32,CRIC.Shanglv.Lib.CacheService.CoverType)">
            <summary>
            设置缓存数据
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="expireTime">过期时间（分钟），默认为0，指不过期</param>
            <param name="coverType">覆盖类型</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Set(System.String,System.Object,System.TimeSpan,CRIC.Shanglv.Lib.CacheService.CoverType)">
            <summary>
            设置缓存数据
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="timeSpan">过期时间</param>
            <param name="coverType">覆盖类型</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Set(System.String,System.Object,System.DateTime,CRIC.Shanglv.Lib.CacheService.CoverType)">
            <summary>
            设置缓存数据
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="dataTime">过期日期</param>
            <param name="coverType">覆盖类型</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.SetCounter(System.String,System.UInt64)">
            <summary>
            设置计数器
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.GetCounter(System.String)">
            <summary>
            获取计数器
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Increment(System.String)">
            <summary>
            缓存对象自增长
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Increment(System.String,System.UInt64)">
            <summary>
            缓存对象自增长
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Delete(System.String)">
            <summary>
            删除缓存数据
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Delete(System.String,System.TimeSpan)">
            <summary>
            删除缓存数据
            </summary>
            <param name="key">键</param>
            <param name="dateSpan">阻塞时间</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Delete(System.String,System.DateTime)">
            <summary>
            删除缓存数据
            </summary>
            <param name="key">键</param>
            <param name="dataTime">阻塞时间</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Get(System.String)">
            <summary>
            获取缓存对象
            </summary>
            <param name="key">键</param>
            <returns>数据对象</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Get``1(System.String)">
            <summary>
            获取缓存对象
            </summary>
            <typeparam name="T">对象</typeparam>
            <param name="key">键</param>
            <returns>数据对象</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Gets(System.String[])">
            <summary>
            获取缓存对象数组
            </summary>
            <param name="keys">键数组</param>
            <returns>对象数组</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Gets``1(System.String[])">
            <summary>
            获取缓存对象
            </summary>
            <typeparam name="T">对象</typeparam>
            <param name="keys">键数组</param>
            <returns>对象List</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Get``1(System.Func{``0},System.String)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Get``1(System.Func{``0},System.String,System.TimeSpan)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="dateSpan">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Get``1(System.Func{``0},System.String,System.DateTime)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="dataTime">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Get``2(System.Func{``0,``1},``0,System.String)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Get``2(System.Func{``0,``1},``0,System.String,System.TimeSpan)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="dateSpan">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Get``2(System.Func{``0,``1},``0,System.String,System.DateTime)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="dataTime">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Get``3(System.Func{``0,``1,``2},``0,``1,System.String)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="param2">方法的参数2</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Get``3(System.Func{``0,``1,``2},``0,``1,System.String,System.TimeSpan)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="param2">方法的参数2</param>
            <param name="dateSpan">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Get``3(System.Func{``0,``1,``2},``0,``1,System.String,System.DateTime)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="param2">方法的参数2</param>
            <param name="dataTime">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Get``4(System.Func{``0,``1,``2,``3},``0,``1,``2,System.String)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="param2">方法的参数2</param>
            <param name="param3">方法的参数3</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Get``4(System.Func{``0,``1,``2,``3},``0,``1,``2,System.String,System.TimeSpan)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="param2">方法的参数2</param>
            <param name="param3">方法的参数3</param>
            <param name="dateSpan">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Get``4(System.Func{``0,``1,``2,``3},``0,``1,``2,System.String,System.DateTime)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="param2">方法的参数2</param>
            <param name="param3">方法的参数3</param>
            <param name="dataTime">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Get``5(System.Func{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.String)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="param2">方法的参数2</param>
            <param name="param3">方法的参数3</param>
            <param name="param4">方法的参数4</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Get``5(System.Func{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.String,System.TimeSpan)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="param2">方法的参数2</param>
            <param name="param3">方法的参数3</param>
            <param name="param4">方法的参数4</param>
            <param name="dateSpan">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.Get``5(System.Func{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.String,System.DateTime)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="param2">方法的参数2</param>
            <param name="param3">方法的参数3</param>
            <param name="param4">方法的参数4</param>
            <param name="dataTime">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.FlushAll">
            <summary>
            缓存全部失效
            </summary>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.ICache.FlushAll(System.TimeSpan)">
            <summary>
            缓存全部失效（多久后失效）
            </summary>
            <param name="dateSpan">失效时间</param>
        </member>
        <member name="P:CRIC.Shanglv.Lib.CacheService.ICache.Hit">
            <summary>
            是否命中
            </summary>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.#ctor">
            <summary>
            构造函数
            </summary>
            <param name="cacheConn">缓存连接配置Key</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="cacheConfigKey">缓存连接配置Key</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.GetSettings(System.String)">
            <summary>
            获取配置信息
            </summary>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Set(System.String,System.Object,CRIC.Shanglv.Lib.CacheService.CoverType)">
            <summary>
            设置缓存数据
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="coverType">覆盖类型</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Set(System.String,System.Object,System.Int32,CRIC.Shanglv.Lib.CacheService.CoverType)">
            <summary>
            设置缓存数据
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="expireTime">过期时间(分钟)，默认为0，指不过期</param>
            <param name="coverType">覆盖类型</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Set(System.String,System.Object,System.TimeSpan,CRIC.Shanglv.Lib.CacheService.CoverType)">
            <summary>
            设置缓存数据
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="timeSpan">过期时间</param>
            <param name="coverType">覆盖类型</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Set(System.String,System.Object,System.DateTime,CRIC.Shanglv.Lib.CacheService.CoverType)">
            <summary>
            设置缓存数据
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="dataTime">过期日期</param>
            <param name="coverType">覆盖类型</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.SetCounter(System.String,System.UInt64)">
            <summary>
            设置计数器
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.GetCounter(System.String)">
            <summary>
            获取计数器
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Increment(System.String)">
            <summary>
            缓存对象自增长
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Increment(System.String,System.UInt64)">
            <summary>
            缓存对象自增长
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Delete(System.String)">
            <summary>
            删除缓存数据
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Delete(System.String,System.TimeSpan)">
            <summary>
            删除缓存数据
            </summary>
            <param name="key">键</param>
            <param name="dateSpan">阻塞时间</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Delete(System.String,System.DateTime)">
            <summary>
            删除缓存数据
            </summary>
            <param name="key">键</param>
            <param name="dataTime">阻塞时间</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Get(System.String)">
            <summary>
            获取缓存对象
            </summary>
            <param name="key">键</param>
            <returns>数据对象</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Gets(System.String[])">
            <summary>
            获取缓存对象数组
            </summary>
            <param name="keys">键数组</param>
            <returns>对象数组</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Get``1(System.String)">
            <summary>
            获取缓存对象
            </summary>
            <typeparam name="T">对象</typeparam>
            <param name="key">键</param>
            <returns>数据对象</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Gets``1(System.String[])">
            <summary>
            获取缓存对象
            </summary>
            <typeparam name="T">对象</typeparam>
            <param name="keys">键数组</param>
            <returns>对象List</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Get``1(System.Func{``0},System.String)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="dateSpan">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Get``1(System.Func{``0},System.String,System.TimeSpan)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="dateSpan">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Get``1(System.Func{``0},System.String,System.DateTime)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="dataTime">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Get``2(System.Func{``0,``1},``0,System.String)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="dateSpan">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Get``2(System.Func{``0,``1},``0,System.String,System.TimeSpan)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="dateSpan">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Get``2(System.Func{``0,``1},``0,System.String,System.DateTime)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="dataTime">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Get``3(System.Func{``0,``1,``2},``0,``1,System.String)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="param2">方法的参数2</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Get``3(System.Func{``0,``1,``2},``0,``1,System.String,System.TimeSpan)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="param2">方法的参数2</param>
            <param name="dateSpan">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Get``3(System.Func{``0,``1,``2},``0,``1,System.String,System.DateTime)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="param2">方法的参数2</param>
            <param name="dataTime">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Get``4(System.Func{``0,``1,``2,``3},``0,``1,``2,System.String)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="param2">方法的参数2</param>
            <param name="param3">方法的参数3</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Get``4(System.Func{``0,``1,``2,``3},``0,``1,``2,System.String,System.TimeSpan)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="param2">方法的参数2</param>
            <param name="param3">方法的参数3</param>
            <param name="dateSpan">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Get``4(System.Func{``0,``1,``2,``3},``0,``1,``2,System.String,System.DateTime)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="param2">方法的参数2</param>
            <param name="param3">方法的参数3</param>
            <param name="dataTime">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Get``5(System.Func{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.String)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="param2">方法的参数2</param>
            <param name="param3">方法的参数3</param>
            <param name="param4">方法的参数4</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Get``5(System.Func{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.String,System.TimeSpan)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="param2">方法的参数2</param>
            <param name="param3">方法的参数3</param>
            <param name="param4">方法的参数4</param>
            <param name="dateSpan">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.Get``5(System.Func{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.String,System.DateTime)">
            <summary>
            根据key得到缓存
            </summary>
            <param name="key">缓存KEY</param>
            <param name="myfun">缓存失效后，调用的方法名</param>
            <param name="param1">方法的参数1</param>
            <param name="param2">方法的参数2</param>
            <param name="param3">方法的参数3</param>
            <param name="param4">方法的参数4</param>
            <param name="dataTime">缓存失效时间</param>
            <returns>返回TResult</returns>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.FlushAll">
            <summary>
            缓存全部失效
            </summary>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.FlushAll(System.TimeSpan)">
            <summary>
            缓存全部失效（多久后失效）
            </summary>
            <param name="dateSpan">失效时间</param>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.Memcached.GetInstance">
            <summary>
            获取缓存实例
            </summary>
            <returns>缓存实例</returns>
        </member>
        <member name="P:CRIC.Shanglv.Lib.CacheService.Memcached.InstanceName">
            <summary>
            缓存实例名
            </summary>
        </member>
        <member name="P:CRIC.Shanglv.Lib.CacheService.Memcached.ServerList">
            <summary>
            缓存服务器列表
            </summary>
        </member>
        <member name="P:CRIC.Shanglv.Lib.CacheService.Memcached.SendReceiveTimeout">
            <summary>
            超时
            </summary>
        </member>
        <member name="P:CRIC.Shanglv.Lib.CacheService.Memcached.MinPoolSize">
            <summary>
            最小缓存池大小
            </summary>
        </member>
        <member name="P:CRIC.Shanglv.Lib.CacheService.Memcached.Maxpoolsize">
            <summary>
            最大缓存池大小
            </summary>    
        </member>
        <member name="P:CRIC.Shanglv.Lib.CacheService.Memcached.Enabled">
            <summary>
            是否启用缓存服务
            </summary>
        </member>
        <member name="P:CRIC.Shanglv.Lib.CacheService.Memcached.Hit">
            <summary>
            是否命中
            </summary>
        </member>
        <member name="F:CRIC.Shanglv.Lib.CacheService.CacheProperty.CACHE_NAME">
            <summary>
            缓存服务器名称
            </summary>
        </member>
        <member name="F:CRIC.Shanglv.Lib.CacheService.CacheProperty.CACHE_GLOBAL">
            <summary>
            全局缓存配置名称
            </summary>
        </member>
        <member name="F:CRIC.Shanglv.Lib.CacheService.CacheProperty.CACHE_NAMESPACE">
            <summary>
            命名空间
            </summary>
        </member>
        <member name="P:CRIC.Shanglv.Lib.CacheService.CacheProperty.ServerName">
            <summary>
            服务器类型名称
            </summary>
        </member>
        <member name="T:CRIC.Shanglv.Lib.CacheService.CoverType">
            <summary>
            覆盖类型
            </summary>
        </member>
        <member name="F:CRIC.Shanglv.Lib.CacheService.CoverType.set">
            <summary>
            无论何时都保存
            </summary>
        </member>
        <member name="F:CRIC.Shanglv.Lib.CacheService.CoverType.add">
            <summary>
            仅当存储空间中不存在键相同的数据时才保存
            </summary>
        </member>
        <member name="F:CRIC.Shanglv.Lib.CacheService.CoverType.replace">
            <summary>
            仅当存储空间中存在键相同的数据时才保存
            </summary>
        </member>
        <member name="T:CRIC.Shanglv.Lib.CacheService.CacheFactory">
            <summary>
            Cache构建工厂
            </summary>
        </member>
        <member name="M:CRIC.Shanglv.Lib.CacheService.CacheFactory.CreateCache(System.String)">
            <summary>
            创建ICache实例
            </summary>
            <param name="cacheConnKey">缓存服务配置名称</param>
            <returns>Cache操作对象</returns>
        </member>
        <member name="P:CRIC.Shanglv.Lib.CacheService.CacheFactory.CacheType">
            <summary>
            缓存类型
            </summary>
        </member>
    </members>
</doc>
